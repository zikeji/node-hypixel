name: test

on:
  push:
  pull_request:

jobs:
  test_lint:
    runs-on: ubuntu-latest
    if: "! contains(toJSON(github.event.commits.*.message), '[skip ci]')"
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Use Node.js 14.x
        uses: actions/setup-node@v2.1.4
        with:
          node-version: 14.x
      - run: npm ci
      - name: Don't continue if lint fails.
        run: npm run test:lint
  test_node:
    runs-on: ubuntu-latest
    needs: test_lint
    strategy:
      max-parallel: 1
      matrix:
        node-version: [10.x, 12.x, 14.x]
    steps:
    - uses: actions/checkout@v2.3.4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2.1.4
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install dependencies
      run: npm ci
    - name: Build
      run: npm run build
    - name: Run tests
      run: npm run coverage:ci
      env:
        CI: true
        HYPIXEL_KEY: ${{ secrets.HYPIXEL_KEY }}
    - name: Coveralls Parallel
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        flag-name: run-${{ matrix.test_number }}
        parallel: true
  test_deno:
    runs-on: ubuntu-latest
    needs: test_lint
    steps: 
    - uses: actions/checkout@v2.3.4
    - name: Use Node.js 14.x
      uses: actions/setup-node@v2.1.4
      with:
        node-version: 14.x
    - name: Install dependencies
      run: npm ci
    - name: Deno Cache
      uses: actions/cache@v2.1.4
      with:
        path: ~/.cache/deno
        key: deno-${{ runner.os }}-${{ hashFiles('deno-lock.json') }}
        restore-keys: |
           deno-${{ runner.os }}-${{ hashFiles('deno-lock.json') }}
           deno-${{ runner.os }}-
           deno-
    - name: Setup Deno
      uses: denolib/setup-deno@master
      with:
        deno-version: v1.x
    - run: deno --version
    - name: Run build to generate denoify'd output
      run: npm run build
    - name: Run tests
      run: npm run test:deno
  finish:
    needs: test_node
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN  }}
        parallel-finished: true
  trigger_release:
    needs:
      - finish
      - test_deno
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && !contains(toJSON(github.event.commits.*.message), '[skip ci]')
    steps:
    - name: Dispatch
      run: |
        curl -X POST -H "Accept: application/vnd.github.v3+json" -H "Authorization: token $GH_TOKEN" https://api.github.com/repos/zikeji/node-hypixel/dispatches -d '{"event_type":"release"}' >/dev/null 2>&1
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
